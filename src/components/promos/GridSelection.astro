---
import {
  featureSelection,
  instrumentSelection,
  softwareSelection,
  brokerSelection,
} from "@/libs/data/selections";
import CardSelection from "../cards/CardSelection.astro";

const featureKeys = Object.keys(featureSelection);
const instrumentKeys = Object.keys(instrumentSelection);
const softwareKeys = Object.keys(softwareSelection);
const brokerKeys = Object.keys(brokerSelection);
---

<div
  class="mb-[80px] flex flex-col gap-[40px] responsive-section md:mx-[40px] xs:mx-[30px] mx-[20px]"
>
  <div class="type-header-container">
    <h2 class="type-header">Reglas y caracter√≠sticas</h2>
  </div>
  <div class="type-grid">
    {
      featureKeys.map((key) => (
        <CardSelection
          name={featureSelection[key].name}
          shortDescription={featureSelection[key].shortDescription}
          id={key}
          type="feature"
        />
      ))
    }
  </div>
  <div class="type-header-container">
    <h2 class="type-header">Activos</h2>
  </div>
  <div class="type-grid">
    {
      instrumentKeys.map((key) => (
        <CardSelection
          name={instrumentSelection[key].name}
          shortDescription={instrumentSelection[key].shortDescription}
          id={key}
          type="instrument"
        />
      ))
    }
  </div>
  <div class="type-header-container">
    <h2 class="type-header">Software</h2>
  </div>
  <div class="type-grid">
    {
      softwareKeys.map((key) => (
        <CardSelection
          name={softwareSelection[key].name}
          shortDescription={softwareSelection[key].shortDescription}
          id={key}
          type="software"
        />
      ))
    }
  </div>
  <div class="type-header-container">
    <h2 class="type-header">Broker</h2>
  </div>
  <div class="type-grid">
    {
      brokerKeys.map((key) => (
        <CardSelection
          name={brokerSelection[key].name}
          shortDescription={brokerSelection[key].shortDescription}
          id={key}
          type="broker"
        />
      ))
    }
  </div>
</div>

<style>
  .type-grid {
    @apply grid lg:grid-cols-3 md:grid-cols-2 grid-cols-1 
    lg:gap-[40px] md:gap-[30px] xs:gap-[20px] gap-[15px]  lg:mb-[40px]
    sm:mb-[25px] mb-[10px];
  }
  .type-header {
    @apply lg:text-6xl md:text-5xl xs:text-3xl text-2xl;
  }
  .type-header-container {
    @apply w-full bg-dark-grey text-[#FFF] py-[20px] md:px-[40px]
    xs:px-[20px] px-[15px] flex justify-center rounded-xl;
  }
</style>

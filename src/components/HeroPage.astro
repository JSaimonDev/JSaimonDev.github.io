---
import { Image } from "astro:assets";
import BreadcrumbHeader from "./BreadcrumbHero.astro";

interface Props {
  hero_image: ImageMetadata;
  title?: string;
  extraClassImage?: string;
  altTitle?: string;
  altUrl?: string;
  altIndex?: number;
  isList?: boolean;
  titleLogo?: string;
  titleLogoLink?: string;
  button1Text?: string;
  button1Link?: string;
  button2Text?: string;
  button2Link?: string;
  hasButtons?: boolean;
}

const {
  hero_image,
  title,
  extraClassImage,
  altTitle,
  altIndex,
  altUrl,
  isList,
  titleLogo,
  titleLogoLink,
  button1Link,
  button1Text,
  button2Link,
  button2Text,
  hasButtons,
} = Astro.props;
---

<!-- <div
  class="lg:h-[400px] xs:max-h-[400px] md:max-h-[450px] max-h-[600px] shadow-[0_3px_3px_0px_rgba(50,50,0,0.5)]
      relative w-full min-h-[350px] overflow-auto"
>
  <div
    class="z-20 text-light-grey w-full h-full flex justify-center items-center bg-[rgba(15,15,15,0.8)]
    md:bg-transparent"
  >
    <div class="responsive-section margin-section w-full flex justify-between">
      <div class="md:pr-[50px] lg:pr-[150px]">
        {
          titleLogo ? (
            <h1 class="w-full flex md:justify-start justify-center">
              <a href={titleLogoLink}>
                <img
                  src={titleLogo}
                  class="h-[70px] mb-[30px] object-contain"
                />
              </a>
            </h1>
          ) : isList ? (
            <h1 class="w-full lg:text-7xl xs:text-6xl text-4xl md:text-left text-center greatVibes mb-[20px]">
              {title}
            </h1>
          ) : (
            <h1 class="w-full lg:text-8xl xs:text-7xl text-5xl md:text-left text-center greatVibes mb-[10px]">
              {title}
            </h1>
          )
        }
        <div class="mb-[20px]">
          <slot />
        </div>
        <BreadcrumbHeader
          altIndex={altIndex}
          altTitle={altTitle}
          altUrl={altUrl}
        />
      </div>
      <div
        class="md:flex hidden flex-col justify-center gap-[50px] xl:basis-[300px] md:basis-[260px] shrink-0"
      >
        {
          hasButtons && (
            <>
              <a href={button1Link}>
                <button
                  class="border-[4px] border-light-grey shadow-[0_0px_10px_3px_rgba(255,255,255,0.5)]
        text-[#FFF] w-full scale-100 hover:scale-105 duration-300 ease-in-out bg-[rgba(0,0,0,0.3)] will-change-transform"
                >
                  {button1Text}
                </button>
              </a>
              <a href={button2Link}>
                <button
                  class="bg-light-grey text-dark-grey w-full scale-100 hover:scale-105 duration-300
                 ease-in-out transform will-change-transform"
                >
                  {button2Text}
                </button>
              </a>
            </>
          )
        }
      </div>
    </div>
  </div>
  <div
    class="md:bg-gradient-to-r md:from-[rgba(15,15,15,1)] md:from-20% md:via-[rgba(15,15,15,0.5)]
     md:via-50% md:to-transparent md:to-80% absolute z-10 inset-0"
  >
  </div>
  <div class="absolute h-full w-full">
    <Image src={hero_image} alt="Hero image" class="h-full object-cover" />
  </div>
</div> -->
<div
  class="shadow-[0_3px_3px_0px_rgba(50,50,0,0.5)]
      relative w-full overflow-auto sm:py-[20px] py-[20px]"
>
  <div
    class="z-20 text-light-grey w-full h-full flex justify-center items-center"
  >
    <div class="responsive-section margin-section w-full flex justify-between">
      <div class="md:pr-[50px] lg:pr-[150px] flex flex-col w-full">
        {
          titleLogo ? (
            <h1 class="w-full flex md:justify-start justify-center">
              <a href={titleLogoLink}>
                <img
                  src={titleLogo}
                  class="h-[70px] mb-[30px] object-contain"
                />
              </a>
            </h1>
          ) : isList ? (
            <h1 class="w-full lg:text-7xl xs:text-6xl text-4xl md:text-left text-center greatVibes mb-[20px] self-center">
              {title}
            </h1>
          ) : (
            <h1 class="w-full lg:text-8xl xs:text-7xl text-5xl md:text-left text-center greatVibes mb-[10px]">
              {title}
            </h1>
          )
        }
        <div class="mb-[20px]">
          <slot />
        </div>
        <BreadcrumbHeader
          altIndex={altIndex}
          altTitle={altTitle}
          altUrl={altUrl}
        />
      </div>
      <div
        class="md:flex hidden flex-col justify-center gap-[50px] xl:basis-[300px] md:basis-[260px] shrink-0"
      >
        {
          hasButtons && (
            <>
              <a href={button1Link}>
                <button
                  class="border-[4px] border-light-grey shadow-[0_0px_10px_3px_rgba(255,255,255,0.5)]
        text-[#FFF] w-full scale-100 hover:scale-105 duration-300 ease-in-out bg-[rgba(0,0,0,0.3)] will-change-transform"
                >
                  {button1Text}
                </button>
              </a>
              <a href={button2Link}>
                <button
                  class="bg-light-grey text-dark-grey w-full scale-100 hover:scale-105 duration-300
                 ease-in-out transform will-change-transform"
                >
                  {button2Text}
                </button>
              </a>
            </>
          )
        }
      </div>
    </div>
  </div>
  <div
    class="md:bg-gradient-to-r md:from-[rgba(15,15,15,1)] md:from-20% md:via-[rgba(15,15,15,0.5)]
     md:via-50% md:to-transparent md:to-80% absolute -z-10 inset-0"
  >
  </div>
  <div class="bg-[rgba(15,15,15,0.8)] md:opacity-0 absolute -z-10 inset-0">
  </div>
  <div class="absolute h-full w-full inset-0 -z-20">
    <Image src={hero_image} alt="Hero image" class="h-full object-cover" />
  </div>
</div>
<style>
  button {
    @apply py-[12px] px-[20px] rounded-lg text-2xl;
  }
  a {
  }
</style>
